"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["vendors-node_modules_ukic_web-components_dist_esm_ic-breadcrumb-group_entry_js"],{

/***/ "../../../../../../../../node_modules/@ukic/web-components/dist/esm/ic-breadcrumb-group.entry.js":
/*!*******************************************************************************************************!*\
  !*** ../../../../../../../../node_modules/@ukic/web-components/dist/esm/ic-breadcrumb-group.entry.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ic_breadcrumb_group: () => (/* binding */ BreadcrumbGroup)\n/* harmony export */ });\n/* harmony import */ var _index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-a7a720e7.js */ \"../../../../../../../../node_modules/@ukic/web-components/dist/esm/index-a7a720e7.js\");\n/* harmony import */ var _helpers_56631aa0_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers-56631aa0.js */ \"../../../../../../../../node_modules/@ukic/web-components/dist/esm/helpers-56631aa0.js\");\n\n\n\nconst icBreadcrumbGroupCss = \":host{display:block}:host ol{display:flex;list-style-type:none;align-items:center;flex-wrap:wrap;padding:0;margin:0}:host(.ic-breadcrumb-group-back) ol ::slotted(ic-breadcrumb){display:none}:host(.ic-breadcrumb-group-back) ol ::slotted(ic-breadcrumb.show){display:flex}:host(.ic-breadcrumb-group-collapsed) ol ::slotted(ic-breadcrumb.hide){display:none;opacity:0;visibility:hidden}:host(.ic-breadcrumb-group-collapsed) ol ::slotted(ic-breadcrumb.visuallyhidden){display:block;opacity:0;transition:all var(--ic-easing-transition-slow)}:host(.ic-breadcrumb-group-collapsed) ol ::slotted(ic-breadcrumb.fade){opacity:1}\";\nconst IcBreadcrumbGroupStyle0 = icBreadcrumbGroupCss;\n\nconst BreadcrumbGroup = class {\n    constructor(hostRef) {\n        (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);\n        this.ADD_CLASS_DELAY = 50;\n        this.IC_BREADCRUMB = \"ic-breadcrumb\";\n        this.SHOW_BACK_ICON = \"show-back-icon\";\n        this.collapsedBreadcrumbs = [];\n        this.resizeObserver = null;\n        this.lastParentBreadcrumb = null;\n        this.deviceSize = _helpers_56631aa0_js__WEBPACK_IMPORTED_MODULE_1__.D.XL;\n        /**\n         * If `true`, display only a single breadcrumb for the parent page with a back icon.\n         */\n        this.backBreadcrumbOnly = false;\n        /**\n         * If `true`, all breadcrumbs between the first and last breadcrumb will be collapsed.\n         */\n        this.collapsed = false;\n        /**\n         * If `true`, the breadcrumb group will display as black in the light theme, and white in the dark theme.\n         */\n        this.monochrome = false;\n        /**\n         * Sets the theme color to the dark or light theme color. \"inherit\" will set the color based on the system settings or ic-theme component.\n         */\n        this.theme = \"inherit\";\n        this.setBreadcrumbTheme = () => {\n            Array.from(this.el.querySelectorAll(this.IC_BREADCRUMB)).forEach((breadcrumb) => {\n                breadcrumb.theme = this.theme;\n            });\n        };\n        this.setBreadcrumbMonochrome = () => {\n            Array.from(this.el.querySelectorAll(this.IC_BREADCRUMB)).forEach((breadcrumb) => {\n                breadcrumb.monochrome = this.monochrome;\n            });\n        };\n        this.setBackBreadcrumb = () => {\n            if (this.backBreadcrumbOnly) {\n                this.setLastParentCollapsedBackBreadcrumb();\n            }\n            else {\n                this.revertLastParentCollapsedBreadcrumb();\n            }\n        };\n        this.setBackBreadcrumbAttr = () => {\n            if (this.lastParentBreadcrumb) {\n                this.lastParentBreadcrumb.classList.add(\"show\");\n                this.lastParentBreadcrumb.setAttribute(this.SHOW_BACK_ICON, \"true\");\n            }\n        };\n        this.getLastParentBreadcrumb = () => {\n            const allBreadcrumbs = this.el.querySelectorAll(this.IC_BREADCRUMB);\n            return allBreadcrumbs.length > 1\n                ? allBreadcrumbs[allBreadcrumbs.length - 2]\n                : null;\n        };\n        this.setCollapsed = () => {\n            var _a, _b;\n            this.collapsedBreadcrumbs.forEach((breadcrumb) => {\n                breadcrumb.classList.remove(\"visuallyhidden\");\n                breadcrumb.classList.remove(\"fade\");\n            });\n            if (this.collapsed) {\n                this.renderCollapsedBreadcrumb();\n                const allBreadcrumbs = Array.from(this.el.querySelectorAll(this.IC_BREADCRUMB));\n                this.collapsedBreadcrumbs = allBreadcrumbs\n                    .splice(1, allBreadcrumbs.length - 2)\n                    .filter((breadcrumb) => !breadcrumb.classList.contains(\"collapsed-breadcrumb-wrapper\"));\n                if (!this.backBreadcrumbOnly) {\n                    this.collapsedBreadcrumbs.forEach((breadcrumb) => breadcrumb.classList.add(\"hide\"));\n                }\n                if (this.collapsedBreadcrumbWrapper) {\n                    (_a = allBreadcrumbs[0]) === null || _a === void 0 ? void 0 : _a.insertAdjacentElement(\"afterend\", this.collapsedBreadcrumbWrapper);\n                }\n            }\n            else {\n                (_b = this.collapsedBreadcrumbWrapper) === null || _b === void 0 ? void 0 : _b.remove();\n            }\n        };\n        this.clickHandler = () => {\n            var _a;\n            (_a = this.collapsedBreadcrumbWrapper) === null || _a === void 0 ? void 0 : _a.remove();\n            this.collapsedBreadcrumbs.forEach((breadcrumb) => {\n                breadcrumb.classList.add(\"visuallyhidden\");\n                breadcrumb.classList.remove(\"hide\");\n                setTimeout(() => {\n                    breadcrumb.classList.add(\"fade\");\n                }, this.ADD_CLASS_DELAY);\n                breadcrumb.addEventListener(\"transitionend\", this.transitionendHandler);\n            });\n            this.collapsed = false;\n            // Set focus to first unhidden breadcrumb\n            this.collapsedBreadcrumbs[0].setFocus();\n        };\n        this.renderCollapsedBreadcrumb = () => {\n            if (this.collapsedBreadcrumbEl === undefined) {\n                this.collapsedBreadcrumbWrapper = document.createElement(\"ic-breadcrumb\");\n                this.collapsedBreadcrumbWrapper.classList.add(\"collapsed-breadcrumb-wrapper\");\n                this.collapsedBreadcrumbEl = document.createElement(\"button\");\n                const ariaLabel = document.createElement(\"span\");\n                ariaLabel.id = \"collapsed-button-label\";\n                ariaLabel.innerText = \"Collapsed breadcrumbs\";\n                ariaLabel.className = \"hide\";\n                this.collapsedBreadcrumbEl.setAttribute(\"aria-labelledby\", ariaLabel.id);\n                const ariaDescribed = document.createElement(\"span\");\n                ariaDescribed.id = \"collapsed-button-described\";\n                ariaDescribed.innerText = \"Select to view collapsed breadcrumbs\";\n                ariaDescribed.className = \"hide\";\n                this.collapsedBreadcrumbEl.setAttribute(\"aria-describedby\", ariaDescribed.id);\n                this.collapsedBreadcrumbEl.id = \"collapsed-ellipsis\";\n                this.collapsedBreadcrumbEl.innerText = \"...\";\n                this.collapsedBreadcrumbEl.classList.add(\"collapsed-breadcrumb\");\n                this.collapsedBreadcrumbEl.addEventListener(\"click\", this.clickHandler);\n                this.collapsedBreadcrumbWrapper.append(ariaDescribed);\n                this.collapsedBreadcrumbWrapper.append(ariaLabel);\n                this.collapsedBreadcrumbWrapper.append(this.collapsedBreadcrumbEl);\n            }\n        };\n        this.transitionendHandler = (event) => {\n            if (event.propertyName === \"opacity\") {\n                event.target.classList.remove(\"visuallyhidden\");\n            }\n        };\n        this.setLastParentCollapsedBackBreadcrumb = () => {\n            this.lastParentBreadcrumb = this.getLastParentBreadcrumb();\n            this.setBackBreadcrumbAttr();\n            if (this.lastParentBreadcrumb) {\n                this.lastParentBreadcrumb.classList.remove(\"hide\");\n                this.lastParentBreadcrumb.classList.add(\"show\");\n            }\n        };\n        this.revertLastParentCollapsedBreadcrumb = () => {\n            if (this.lastParentBreadcrumb) {\n                this.lastParentBreadcrumb.setAttribute(this.SHOW_BACK_ICON, \"false\");\n                if (this.collapsed) {\n                    this.lastParentBreadcrumb.classList.add(\"hide\");\n                }\n            }\n        };\n        this.resizeObserverCallback = (currSize) => {\n            if (currSize !== this.deviceSize) {\n                this.deviceSize = currSize;\n                const isSmallDevice = this.deviceSize <= _helpers_56631aa0_js__WEBPACK_IMPORTED_MODULE_1__.D.S;\n                this.el.setAttribute(\"back-breadcrumb-only\", `${isSmallDevice}`);\n                if (isSmallDevice) {\n                    if (this.collapsed) {\n                        this.setLastParentCollapsedBackBreadcrumb();\n                    }\n                    else {\n                        this.setBackBreadcrumb();\n                    }\n                }\n                else {\n                    const allBreadcrumbs = Array.from(this.el.querySelectorAll(this.IC_BREADCRUMB));\n                    if (this.collapsed && allBreadcrumbs.length > 2) {\n                        this.revertLastParentCollapsedBreadcrumb();\n                        this.setCollapsed();\n                    }\n                    else {\n                        allBreadcrumbs.forEach((breadcrumb) => {\n                            breadcrumb.setAttribute(this.SHOW_BACK_ICON, \"false\");\n                        });\n                    }\n                }\n            }\n        };\n        this.runResizeObserver = () => {\n            this.resizeObserver = new ResizeObserver(() => {\n                this.resizeObserverCallback((0,_helpers_56631aa0_js__WEBPACK_IMPORTED_MODULE_1__.f)());\n            });\n            this.resizeObserver.observe(this.el);\n        };\n    }\n    watchBackBreadcrumbHandler() {\n        this.setBackBreadcrumb();\n    }\n    watchCollapsedHandler() {\n        this.setCollapsed();\n    }\n    watchMonochromeHandler() {\n        this.setBreadcrumbMonochrome();\n    }\n    watchThemeHandler() {\n        this.setBreadcrumbTheme();\n    }\n    componentWillLoad() {\n        this.setBreadcrumbTheme();\n        this.setBreadcrumbMonochrome();\n        if (this.backBreadcrumbOnly) {\n            this.setBackBreadcrumb();\n        }\n        else {\n            (0,_helpers_56631aa0_js__WEBPACK_IMPORTED_MODULE_1__.h)(this.runResizeObserver);\n        }\n        if (this.collapsed &&\n            this.el.querySelectorAll(this.IC_BREADCRUMB).length > 2) {\n            if ((0,_helpers_56631aa0_js__WEBPACK_IMPORTED_MODULE_1__.f)() === _helpers_56631aa0_js__WEBPACK_IMPORTED_MODULE_1__.D.S) {\n                this.setLastParentCollapsedBackBreadcrumb();\n            }\n            else {\n                this.setCollapsed();\n            }\n        }\n        this.lastParentBreadcrumb = this.getLastParentBreadcrumb();\n    }\n    disconnectedCallback() {\n        var _a, _b;\n        (_a = this.lastParentBreadcrumb) === null || _a === void 0 ? void 0 : _a.removeEventListener(\"transitionend\", this.transitionendHandler);\n        (_b = this.collapsedBreadcrumbEl) === null || _b === void 0 ? void 0 : _b.removeEventListener(\"click\", this.clickHandler);\n    }\n    render() {\n        const { backBreadcrumbOnly, collapsed, theme } = this;\n        return ((0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.H, { key: 'e9547e6fce74b57f2a3d7904bdca580c59abf881', class: {\n                \"ic-breadcrumb-group-back\": backBreadcrumbOnly,\n                \"ic-breadcrumb-group-collapsed\": collapsed,\n                [`ic-theme-${theme}`]: theme !== \"inherit\",\n            } }, (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"nav\", { key: '56fd90771323680169a7e2ff757c534f499bda48', \"aria-label\": \"breadcrumbs\" }, (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"ol\", { key: '2817e0c715c94937436a41222f86a0e5e6b9cc92' }, (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"slot\", { key: '137e284689752e6256c39ecc19988aafd3e49942' })))));\n    }\n    get el() { return (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }\n    static get watchers() { return {\n        \"backBreadcrumbOnly\": [\"watchBackBreadcrumbHandler\"],\n        \"collapsed\": [\"watchCollapsedHandler\"],\n        \"monochrome\": [\"watchMonochromeHandler\"],\n        \"theme\": [\"watchThemeHandler\"]\n    }; }\n};\nBreadcrumbGroup.style = IcBreadcrumbGroupStyle0;\n\n\n\n//# sourceMappingURL=ic-breadcrumb-group.entry.js.map\n\n//# sourceURL=webpack:///../../../../../../../../node_modules/@ukic/web-components/dist/esm/ic-breadcrumb-group.entry.js?\n}");

/***/ })

}]);