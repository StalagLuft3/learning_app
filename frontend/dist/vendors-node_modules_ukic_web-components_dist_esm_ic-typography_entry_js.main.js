"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["vendors-node_modules_ukic_web-components_dist_esm_ic-typography_entry_js"],{

/***/ "../../../../../../../../node_modules/@ukic/web-components/dist/esm/ic-typography.entry.js":
/*!*************************************************************************************************!*\
  !*** ../../../../../../../../node_modules/@ukic/web-components/dist/esm/ic-typography.entry.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ic_typography: () => (/* binding */ Typography)\n/* harmony export */ });\n/* harmony import */ var _index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-a7a720e7.js */ \"../../../../../../../../node_modules/@ukic/web-components/dist/esm/index-a7a720e7.js\");\n/* harmony import */ var _helpers_56631aa0_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers-56631aa0.js */ \"../../../../../../../../node_modules/@ukic/web-components/dist/esm/helpers-56631aa0.js\");\n\n\n\nconst icTypographyCss = \"/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%;}body{margin:0}main{display:block}h1{font-size:2em;margin:0.67em 0}hr{box-sizing:content-box;height:0;overflow:visible;}pre{font-family:monospace, monospace;font-size:1em;}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted;}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em;}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0;}button,input{overflow:visible}button,select{text-transform:none}button,[type=\\\"button\\\"],[type=\\\"reset\\\"],[type=\\\"submit\\\"]{-webkit-appearance:button}button::-moz-focus-inner,[type=\\\"button\\\"]::-moz-focus-inner,[type=\\\"reset\\\"]::-moz-focus-inner,[type=\\\"submit\\\"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=\\\"button\\\"]:-moz-focusring,[type=\\\"reset\\\"]:-moz-focusring,[type=\\\"submit\\\"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal;}progress{vertical-align:baseline}textarea{overflow:auto}[type=\\\"checkbox\\\"],[type=\\\"radio\\\"]{box-sizing:border-box;padding:0;}[type=\\\"number\\\"]::-webkit-inner-spin-button,[type=\\\"number\\\"]::-webkit-outer-spin-button{height:auto}[type=\\\"search\\\"]{-webkit-appearance:textfield;outline-offset:-2px;}[type=\\\"search\\\"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit;}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}:host{display:block;position:relative;color:var(--ic-typography-color, var(--ic-color-text-primary))}:host(.ic-typography-vertical-margins-h1){margin:0 0 var(--ic-space-xl)}:host(.ic-typography-vertical-margins-h2){margin:var(--ic-space-xxl) 0 var(--ic-space-lg)}:host(.ic-typography-vertical-margins-h3){margin:var(--ic-space-xl) 0 var(--ic-space-md)}:host(.ic-typography-vertical-margins-h4){margin:var(--ic-space-lg) 0 var(--ic-space-md)}:host(.ic-typography-vertical-margins-subtitle-large),:host(.ic-typography-vertical-margins-subtitle-small),:host(.ic-typography-vertical-margins-body),:host(.ic-typography-vertical-margins-code-large),:host(.ic-typography-vertical-margins-code-small),:host(.ic-typography-vertical-margins-code-extra-small){margin:0 0 var(--ic-space-md)}:host(.ic-typography-vertical-margins-caption),:host(.ic-typography-vertical-margins-caption-uppercase){margin:0 0 var(--ic-space-xs)}:host(.ic-typography-vertical-margins-h2:first-child),:host(.ic-typography-vertical-margins-h3:first-child),:host(.ic-typography-vertical-margins-h4:first-child){margin-top:0}:host(.ic-typography-h1){font:var(--ic-font-h1) !important}:host(.ic-typography-h2){font:var(--ic-font-h2);letter-spacing:var(--ic-font-letter-spacing-0pt0025)}:host(.ic-typography-h3){font:var(--ic-font-h3)}:host(.ic-typography-h4){font:var(--ic-font-h4);letter-spacing:var(--ic-font-letter-spacing-0pt0015)}:host(.ic-typography-subtitle-large){font:var(--ic-font-subtitle-large);letter-spacing:var(--ic-font-letter-spacing-0pt0015)}:host(.ic-typography-subtitle-small){font:var(--ic-font-subtitle-small);letter-spacing:var(--ic-font-letter-spacing-0pt0015)}:host(.ic-typography-body){font:var(--ic-font-body);letter-spacing:var(--ic-font-letter-spacing-0pt005)}:host(.ic-typography-caption){font:var(--ic-font-caption);letter-spacing:var(--ic-font-letter-spacing-0pt0025)}:host(.ic-typography-caption-uppercase){font:var(--ic-font-caption);letter-spacing:var(--ic-font-letter-spacing-0pt0025);text-transform:uppercase}:host(.ic-typography-label){font:var(--ic-font-label);letter-spacing:var(--ic-font-letter-spacing-0pt025)}:host(.ic-typography-label-uppercase){font:var(--ic-font-label);letter-spacing:var(--ic-font-letter-spacing-0pt025);text-transform:uppercase}:host(.ic-typography-code-large){font:var(--ic-font-code-large);letter-spacing:var(--ic-font-letter-spacing-0pt025)}:host(.ic-typography-code-small){font:var(--ic-font-code-small);letter-spacing:var(--ic-font-letter-spacing-0pt005)}:host(.ic-typography-code-extra-small){font:var(--ic-font-code-extra-small);letter-spacing:var(--ic-font-letter-spacing-0pt025)}:host(.ic-typography-badge){font:var(--ic-font-badge);letter-spacing:var(--ic-font-letter-spacing-0pt0025)}:host(.ic-typography-badge-small){font:var(--ic-font-badge-small);letter-spacing:var(--ic-font-letter-spacing-0pt0025)}:host(.ic-typography-no-wrap){white-space:nowrap}:host ::slotted(h1),:host ::slotted(h2),:host ::slotted(h3),:host ::slotted(h4),:host ::slotted(h5),:host ::slotted(h6),:host ::slotted(p),:host ::slotted(label){font:inherit;letter-spacing:inherit}.trunc-wrapper{display:-webkit-box;-webkit-box-orient:vertical;line-clamp:var(--truncation-max-lines, initial);-webkit-line-clamp:var(--truncation-max-lines, initial);overflow:hidden;padding-right:var(--ellipsis-padding-right, 0)}.trunc-btn{border:none;background:none;padding:0;color:var(--ic-color-text-primary);text-decoration:underline;font-weight:var(--ic-font-weight-bold);transition:var(--ic-easing-transition-fast)}.trunc-btn:hover,.trunc-btn.focus{outline:none;border-bottom:0.25rem solid !important;margin-bottom:-0.25rem !important;text-decoration:none;cursor:pointer}:host(.ic-typography-strikethrough){text-decoration:line-through}:host(.ic-typography-underline){text-decoration:underline}:host(.ic-typography-underline.ic-typography-strikethrough){text-decoration:line-through underline}:host(.ic-typography-italic){font-style:italic !important}:host(.ic-typography-bold){font-weight:var(--ic-font-weight-bold)}:host(.ic-theme-dark),:host(.ic-theme-light){--ic-typography-color:var(--ic-color-text-primary)}:host(.in-ag-grid),:host(.in-ag-grid) ::slotted(*){overflow:hidden;text-overflow:ellipsis;white-space:nowrap}@supports (text-underline-offset: 25%){.trunc-btn:hover,.trunc-btn.focus{text-decoration-line:underline;text-decoration-thickness:25%;text-underline-offset:25%;border-bottom:0 !important;margin-bottom:0 !important}}@media (prefers-color-scheme: dark) and (forced-colors: none){:host,.trunc-btn:not(ic-tooltip){color:var(--ic-typography-color)}}\";\nconst IcTypographyStyle0 = icTypographyCss;\n\nconst Typography = class {\n    constructor(hostRef) {\n        (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);\n        this.typographyTruncationExpandToggle = (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"typographyTruncationExpandToggle\", 7);\n        this.focusBtnFromKeyboard = true;\n        this.inAGGrid = false;\n        this.lastMarkerTop = 0;\n        this.lastWidth = 0;\n        this.resizeObserver = null;\n        this.truncatedHeight = 0;\n        this.truncated = false;\n        this.truncButtonFocussed = false;\n        /**\n         * If `true`, appropriate top and bottom margins will be applied to the typography.\n         */\n        this.applyVerticalMargins = false;\n        /**\n         * If `true`, the typography will have a bold font weight.\n         * Note: This will have no impact on variants that already use an equivalent or higher font weight (h1, h2, and subtitle-large).\n         */\n        this.bold = false;\n        /**\n         * If `true`, the typography will have an italic font style.\n         */\n        this.italic = false;\n        /**\n         * If `true`, the typography will have a line through it.\n         */\n        this.strikethrough = false;\n        /**\n         * Sets the text color to the dark or light theme color. \"inherit\" will set the color based on the system settings or ic-theme component.\n         */\n        this.theme = \"inherit\";\n        /**\n         * If `true`, the typography will have a line under it.\n         */\n        this.underline = false;\n        /**\n         * The ICDS typography style to use.\n         */\n        this.variant = \"body\";\n        this.expanded = false;\n        this.toggleExpanded = (ev) => {\n            ev.stopPropagation();\n            this.expanded = !this.expanded;\n            this.typographyTruncationExpandToggle.emit({\n                expanded: this.expanded,\n                typographyEl: this.el,\n            });\n        };\n        this.checkMarkerPosition = (elTop, markerTop) => {\n            if (markerTop - elTop < this.truncatedHeight) {\n                this.truncated = false;\n                this.expanded = false;\n            }\n            else {\n                this.truncated = true;\n            }\n        };\n        this.getElementTop = (el) => {\n            return el.getClientRects && el.getClientRects()[0]\n                ? el.getClientRects()[0].top\n                : 0;\n        };\n        this.runResizeObserver = () => {\n            if (this.truncWrapperEl) {\n                this.resizeObserver = new ResizeObserver(() => {\n                    clearTimeout(this.resizeInterval);\n                    this.resizeInterval = window.setTimeout(this.resizeObserverCallback, 50);\n                });\n                this.resizeObserver.observe(this.truncWrapperEl);\n            }\n        };\n        this.resizeObserverCallback = () => {\n            if (this.lastWidth === this.el.clientWidth) {\n                return;\n            }\n            if (this.truncatedHeight === 0) {\n                this.checkMaxLines(this.el.clientHeight);\n                return;\n            }\n            const markerTop = this.getElementTop(this.marker);\n            if (markerTop === this.lastMarkerTop) {\n                return;\n            }\n            this.checkMarkerPosition(this.getElementTop(this.el), markerTop);\n            this.lastMarkerTop = markerTop;\n            this.lastWidth = this.el.clientWidth;\n        };\n        this.truncButtonFocus = () => {\n            if (this.focusBtnFromKeyboard) {\n                this.truncButtonFocussed = true;\n            }\n        };\n        this.truncButtonBlur = () => {\n            this.focusBtnFromKeyboard = true;\n            this.truncButtonFocussed = false;\n        };\n        this.truncButtonFocusFromMouse = () => {\n            this.focusBtnFromKeyboard = false;\n        };\n    }\n    watchExpandedHandler() {\n        this.el.setAttribute(\"style\", `--truncation-max-lines: ${this.expanded ? \"initial\" : this.maxLines}`);\n    }\n    disconnectedCallback() {\n        if (this.resizeObserver !== null) {\n            this.resizeObserver.disconnect();\n        }\n    }\n    /**\n     * @internal This is used by data table to remove all truncation in certain events\n     */\n    async resetTruncation() {\n        if (this.truncated) {\n            this.truncated = false;\n            this.maxLines = 0;\n            this.el.removeAttribute(\"max-lines\");\n            this.expanded = false;\n            this.el.removeAttribute(\"style\");\n        }\n    }\n    componentDidLoad() {\n        var _a, _b;\n        if ((this.variant === \"body\" ||\n            ((_b = (_a = this.el.getRootNode()) === null || _a === void 0 ? void 0 : _a.host) === null || _b === void 0 ? void 0 : _b.tagName) ===\n                \"IC-TOOLTIP\") &&\n            this.maxLines &&\n            this.maxLines > 0) {\n            const marker = document.createElement(\"span\");\n            marker.style.visibility = \"hidden\";\n            this.el.appendChild(marker);\n            this.marker = marker;\n            this.lastWidth = this.el.clientWidth;\n            this.checkMaxLines(this.el.clientHeight);\n            (0,_helpers_56631aa0_js__WEBPACK_IMPORTED_MODULE_1__.h)(this.runResizeObserver);\n        }\n    }\n    componentWillRender() {\n        if ((0,_helpers_56631aa0_js__WEBPACK_IMPORTED_MODULE_1__.b)(this.el)) {\n            this.inAGGrid = true;\n        }\n    }\n    /**\n     * @internal This checks if the number of lines of text exceeds the maxLines prop. If so, set the line clamp CSS to the max lines\n     * @param height - text container height\n     */\n    async checkMaxLines(height) {\n        //24 is the height of a single line\n        const numLines = Math.floor(height / 24);\n        if (this.maxLines && numLines > this.maxLines) {\n            this.el.setAttribute(\"style\", `--truncation-max-lines: ${this.maxLines}`);\n            this.truncatedHeight = this.el.clientHeight;\n            this.truncated = true;\n        }\n    }\n    /**\n     * @internal This method makes it possible to set the expanded status of truncated text outside of ic-typography component\n     */\n    async setShowHideExpanded(expanded) {\n        this.expanded = expanded;\n    }\n    render() {\n        var _a, _b;\n        const { variant, applyVerticalMargins, maxLines, truncated, expanded, strikethrough, underline, italic, bold, theme, } = this;\n        return ((0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.H, { key: '0f64ad9e02b32790b2bc269df212468b2f9426f7', class: {\n                [`ic-typography-${variant}`]: true,\n                [`ic-typography-vertical-margins-${variant}`]: !!applyVerticalMargins,\n                [\"ic-typography-bold\"]: !!bold,\n                [\"ic-typography-italic\"]: !!italic,\n                [\"ic-typography-strikethrough\"]: !!strikethrough,\n                [\"ic-typography-underline\"]: !!underline,\n                [\"in-ag-grid\"]: this.inAGGrid,\n                [`ic-theme-${theme}`]: theme !== \"inherit\",\n            } }, (variant === \"body\" ||\n            ((_b = (_a = this.el.getRootNode()) === null || _a === void 0 ? void 0 : _a.host) === null || _b === void 0 ? void 0 : _b.tagName) ===\n                \"IC-TOOLTIP\") &&\n            maxLines &&\n            maxLines > 0 ? ((0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { class: \"trunc-wrapper\", ref: (el) => (this.truncWrapperEl = el) }, (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"slot\", null))) : ((0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"slot\", null)), variant === \"body\" && maxLines && maxLines > 0 && truncated && ((0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"button\", { key: '3e5f7e8b549122986d1dc67fe35b5e270233eb71', class: { \"trunc-btn\": true, focus: this.truncButtonFocussed }, onFocus: this.truncButtonFocus, onBlur: this.truncButtonBlur, onMouseDown: this.truncButtonFocusFromMouse, onClick: this.toggleExpanded }, expanded ? \"See less\" : \"See more\"))));\n    }\n    get el() { return (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }\n    static get watchers() { return {\n        \"expanded\": [\"watchExpandedHandler\"]\n    }; }\n};\nTypography.style = IcTypographyStyle0;\n\n\n\n//# sourceMappingURL=ic-typography.entry.js.map\n\n//# sourceURL=webpack:///../../../../../../../../node_modules/@ukic/web-components/dist/esm/ic-typography.entry.js?\n}");

/***/ })

}]);