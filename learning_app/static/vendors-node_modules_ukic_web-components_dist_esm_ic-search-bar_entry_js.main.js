"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["vendors-node_modules_ukic_web-components_dist_esm_ic-search-bar_entry_js"],{

/***/ "../../../../../../../../node_modules/@ukic/web-components/dist/esm/ic-search-bar.entry.js":
/*!*************************************************************************************************!*\
  !*** ../../../../../../../../node_modules/@ukic/web-components/dist/esm/ic-search-bar.entry.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ic_search_bar: () => (/* binding */ SearchBar)\n/* harmony export */ });\n/* harmony import */ var _index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-a7a720e7.js */ \"../../../../../../../../node_modules/@ukic/web-components/dist/esm/index-a7a720e7.js\");\n/* harmony import */ var _helpers_56631aa0_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers-56631aa0.js */ \"../../../../../../../../node_modules/@ukic/web-components/dist/esm/helpers-56631aa0.js\");\n\n\n\nconst clearIcon = `<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M15.8327 5.34199L14.6577 4.16699L9.99935 8.82533L5.34102 4.16699L4.16602 5.34199L8.82435 10.0003L4.16602 14.6587L5.34102 15.8337L9.99935 11.1753L14.6577 15.8337L15.8327 14.6587L11.1743 10.0003L15.8327 5.34199Z\" fill=\"currentColor\"/>\n</svg>\n`;\n\nconst searchIcon = `<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\">\n    <path d=\"M13.1292 11.8792H12.4708L12.2375 11.6542C13.0542 10.7042 13.5458 9.47083 13.5458 8.12916C13.5458 5.13749 11.1208 2.71249 8.12916 2.71249C5.13749 2.71249 2.71249 5.13749 2.71249 8.12916C2.71249 11.1208 5.13749 13.5458 8.12916 13.5458C9.47083 13.5458 10.7042 13.0542 11.6542 12.2375L11.8792 12.4708V13.1292L16.0458 17.2875L17.2875 16.0458L13.1292 11.8792ZM8.12916 11.8792C6.05416 11.8792 4.37916 10.2042 4.37916 8.12916C4.37916 6.05416 6.05416 4.37916 8.12916 4.37916C10.2042 4.37916 11.8792 6.05416 11.8792 8.12916C11.8792 10.2042 10.2042 11.8792 8.12916 11.8792Z\" fill=\"currentColor\"/>\n</svg>`;\n\nconst icSearchBarCss = \"/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%;}body{margin:0}main{display:block}h1{font-size:2em;margin:0.67em 0}hr{box-sizing:content-box;height:0;overflow:visible;}pre{font-family:monospace, monospace;font-size:1em;}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted;}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em;}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0;}button,input{overflow:visible}button,select{text-transform:none}button,[type=\\\"button\\\"],[type=\\\"reset\\\"],[type=\\\"submit\\\"]{-webkit-appearance:button}button::-moz-focus-inner,[type=\\\"button\\\"]::-moz-focus-inner,[type=\\\"reset\\\"]::-moz-focus-inner,[type=\\\"submit\\\"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=\\\"button\\\"]:-moz-focusring,[type=\\\"reset\\\"]:-moz-focusring,[type=\\\"submit\\\"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal;}progress{vertical-align:baseline}textarea{overflow:auto}[type=\\\"checkbox\\\"],[type=\\\"radio\\\"]{box-sizing:border-box;padding:0;}[type=\\\"number\\\"]::-webkit-inner-spin-button,[type=\\\"number\\\"]::-webkit-outer-spin-button{height:auto}[type=\\\"search\\\"]{-webkit-appearance:textfield;outline-offset:-2px;}[type=\\\"search\\\"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit;}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;font-size:100%;font-style:inherit;vertical-align:baseline}:host(.ic-search-bar-search){display:block;--divider-height:1.5rem;--ic-input-label-helpertext-padding:var(--ic-space-xs);--border-color:var(--ic-search-bar-outline);--input-bg-color:var(--ic-search-bar-background);--border-color-disabled:var(--ic-search-bar-outline-disabled);--menu-item-text-color:var(--ic-search-bar-dropdown-option-text);--menu-item-desc-text-color:var(--ic-search-bar-dropdown-option-description);--menu-bg-color:var(--ic-search-bar-dropdown-background);--menu-border-color:var(--ic-search-bar-dropdown-outline)}:host(.ic-search-bar-disabled){--ic-input-label-text-color:var(--ic-search-bar-label-disabled);--ic-input-label-helper-text-color:var(--ic-search-bar-subtitle-disabled)}:host(.ic-search-bar-search:hover){--border-color:var(--ic-search-bar-outline-hover)}:host(.ic-search-bar-search:active){--border-color:var(--ic-search-bar-outline-pressed)}:host(.ic-search-bar-search.ic-search-bar-small){--divider-height:1rem}:host(.ic-search-bar-full-width){width:100%}::-moz-placeholder{color:var(--ic-search-bar-placeholder-text);opacity:1}::placeholder{color:var(--ic-search-bar-placeholder-text);opacity:1}input{border:0;border-radius:var(--ic-border-radius);color:var(--ic-search-bar-filled-text);background-color:var(--input-bg-color);line-height:1.5rem;letter-spacing:0.005rem;width:100%;padding-right:var(--ic-space-xs);padding-left:var(--ic-space-xs);caret-color:var(--ic-search-bar-filled-text-cursor)}input:focus{border:0;outline:0}input:disabled::-moz-placeholder{color:var(--ic-search-bar-disabled-text)}input:disabled,input:disabled::placeholder{color:var(--ic-search-bar-disabled-text)}input::-webkit-outer-spin-button,input::-webkit-inner-spin-button{-webkit-appearance:none;margin:0}.no-left-pad{padding-left:0}input[type=\\\"search\\\"]::-webkit-search-cancel-button,input[type=\\\"search\\\"]::-webkit-search-decoration,input[type=\\\"search\\\"]::-webkit-search-results-button,input[type=\\\"search\\\"]::-webkit-search-results-decoration{display:none}input[type=\\\"search\\\"].truncate-value{width:100%;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.clear-button-container{align-items:center;margin-right:var(--ic-space-1px);display:none;visibility:hidden}.clear-button{border-radius:var(--ic-border-radius);transition:box-shadow var(--ic-easing-transition),\\n    border-radius var(--ic-easing-transition)}.clear-button:focus,.clear-button:active{background-color:var(--ic-color-focus-inner);box-shadow:inset 0 0 0 0.125rem var(--ic-color-focus-outer);border-radius:0.25rem}.clear-button-unfocused *{fill:var(--ic-search-bar-clear-button)}.clear-button:focus,.clear-button:active *{fill:var(--ic-atoms-input-clear-button-focus)}.clear-button-visible{visibility:visible;display:flex}.search-submit-button-container{display:flex;align-items:center}.search-submit-button-unfocused *{fill:var(--ic-search-bar-filled-icon)}.search-submit-button-disabled *{fill:var(--ic-search-bar-icon-disabled)}.search-submit-button-disabled .ic-tooltip-container{display:none !important}.search-submit-button:focus,.search-submit-button:active{background-color:var(--ic-color-focus-inner) !important;box-shadow:inset 0 0 0 0.125rem var(--ic-color-focus-outer) !important;border-radius:var(--ic-space-xxs)}.search-submit-button:focus,.search-submit-button:active *{fill:white}.divider{width:var(--ic-border-width);background-color:var(--ic-search-bar-dropdown-divider);height:var(--divider-height)}.menu-container{width:var(--input-width, 20rem);position:relative;top:var(--ic-space-xxxs)}.menu-container.fullwidth{width:100%}.no-results{cursor:not-allowed}.search-results-status{border:0;clip:rect(0, 0, 0, 0, 0);height:var(--ic-space-1px);margin-bottom:calc(-1 * var(--ic-space-1px));margin-right:calc(-1 * var(--ic-space-1px));overflow:hidden;padding:0;position:absolute;white-space:nowrap;width:var(--ic-space-1px)}@media (forced-colors: active){.search-submit-button-unfocused *{fill:canvastext}.search-submit-button-disabled *{fill:GrayText}}\";\nconst IcSearchBarStyle0 = icSearchBarCss;\n\nlet inputIds = 0;\nconst SearchBar = class {\n    constructor(hostRef) {\n        (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);\n        this.icChange = (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"icChange\", 7);\n        this.icClear = (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"icClear\", 7);\n        this.icInput = (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"icInput\", 7);\n        this.icOptionSelect = (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"icOptionSelect\", 7);\n        this.icMenuChange = (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"icMenuChange\", 7);\n        this.icClearBlur = (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"icClearBlur\", 7);\n        this.icRetryLoad = (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"icRetryLoad\", 7);\n        this.icSubmitSearch = (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"icSubmitSearch\", 7);\n        this.icSubmitSearchBlur = (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"icSubmitSearchBlur\", 7);\n        this.icSearchBarBlur = (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"icSearchBarBlur\", 7);\n        this.icSearchBarFocus = (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"icSearchBarFocus\", 7);\n        this.icKeydown = (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"icKeydown\", 7);\n        this.hasTimedOut = false;\n        this.inputId = `ic-search-bar-input-${inputIds++}`;\n        this.menuCloseFromMenuChangeEvent = false;\n        this.menuId = `${this.inputId}-menu`;\n        this.preLoad = true;\n        this.preventSubmit = false;\n        this.prevNoOption = false;\n        this.retryButtonClick = false;\n        this.retryViaKeyPress = false;\n        this.truncateValue = false;\n        this.clearButtonFocused = false;\n        this.open = false;\n        this.searchSubmitFocused = false;\n        this.showClearButton = false;\n        /**\n         * The automatic capitalisation of the text value as it is entered/edited by the user.\n         * Available options: \"off\", \"none\", \"on\", \"sentences\", \"words\", \"characters\".\n         */\n        this.autocapitalize = \"off\";\n        /**\n         * The state of autocompletion the browser can apply on the text value.\n         */\n        this.autocomplete = \"off\";\n        /**\n         * The state of autocorrection the browser can apply when the user is entering/editing the text value.\n         */\n        this.autocorrect = \"off\";\n        /**\n         * If `true`, the form control will have input focus when the page loads.\n         */\n        this.autofocus = false;\n        /**\n         * The number of characters until suggestions appear. The submit button will be disabled until the inputted value is equal to or greater than this number.\n         */\n        this.charactersUntilSuggestion = 2;\n        /**\n         * If `true`, the disabled state will be set.\n         */\n        this.disabled = false;\n        /**\n         * Specify whether to disable the built in filtering. For example, if options will already be filtered from external source.\n         * If `true`, all options provided will be displayed.\n         */\n        this.disableAutoFiltering = false;\n        /**\n         * The amount of time, in milliseconds, to wait to trigger the `icChange` event after each keystroke.\n         */\n        this.debounce = 0;\n        /**\n         * The text displayed when there are no options in the option list.\n         */\n        this.emptyOptionListText = \"No results found\";\n        /**\n         * If `true`, the search bar will be focused when component loaded.\n         */\n        this.focusOnLoad = false;\n        /**\n         * Specify whether the search bar fills the full width of the container.\n         * If `true`, this overrides the --input-width CSS variable.\n         */\n        this.fullWidth = false;\n        /**\n         * The helper text that will be displayed for additional field guidance.\n         */\n        this.helperText = \"\";\n        /**\n         * If `true`, the label will be hidden and the required label value will be applied as an aria-label.\n         */\n        this.hideLabel = false;\n        /**\n         * The hint text for the hidden assistive description element.\n         */\n        this.assistiveHintText = \"When autocomplete results are available use the up and down arrows to choose and press enter to select\";\n        /**\n         * The custom name for the label field to correspond with the IcMenuOption type.\n         */\n        this.labelField = \"label\";\n        /**\n         * Trigger loading state when fetching options asynchronously\n         */\n        this.loading = false;\n        /**\n         * Change the message displayed when external loading times out.\n         */\n        this.loadingErrorLabel = \"Loading Error\";\n        /**\n         * Change the message displayed whilst the options are being loaded externally.\n         */\n        this.loadingLabel = \"Loading...\";\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * The placeholder value to display.\n         */\n        this.placeholder = \"Search\";\n        /**\n         * If `true` the parent form will not submit when the icSubmitSearch event fires.\n         */\n        this.preventFormSubmitOnSearch = false;\n        /**\n         * If `true`, the readonly state will be set.\n         */\n        this.readonly = false;\n        /**\n         * If `true`, the search bar will require a value.\n         */\n        this.required = false;\n        /**\n         * Specify the mode search bar uses to search. `navigation` allows for quick lookups of a set of values, `query` allows for more general searches.\n         */\n        this.searchMode = \"navigation\";\n        /**\n         * The size of the search bar component.\n         */\n        this.size = \"medium\";\n        /**\n         * If `true`, the value of the search will have its spelling and grammar checked.\n         */\n        this.spellcheck = false;\n        /**\n         * Sets the theme color to the dark or light theme color. \"inherit\" will set the color based on the system settings or ic-theme component.\n         */\n        this.theme = \"inherit\";\n        /**\n         * The custom name for the value field to correspond with the IcMenuOption type.\n         */\n        this.valueField = \"value\";\n        this.filteredOptions = [];\n        /**\n         * The suggested search options.\n         */\n        this.options = [];\n        /**\n         * The value of the search input.\n         */\n        this.value = \"\";\n        this.handleClear = (ev) => {\n            var _a;\n            const keyboardEvent = ev;\n            const mouseEvent = ev;\n            if (mouseEvent.type === \"click\" ||\n                keyboardEvent.code === \"Enter\" ||\n                keyboardEvent.code === \"Space\") {\n                this.value = \"\";\n                (_a = this.inputEl) === null || _a === void 0 ? void 0 : _a.setAttribute(\"value\", \"\");\n                this.loading = false;\n                clearTimeout(this.timeoutTimer);\n                this.filteredOptions = this.options;\n                this.showMenuWithNoInput() && this.setMenuChange(true);\n                this.el.setFocus();\n                this.icClear.emit();\n                ev.preventDefault();\n                this.preventSubmit = true;\n            }\n        };\n        this.onInput = ({ target }) => {\n            this.value = target.value;\n            this.icInput.emit({ value: this.value });\n            if (this.options.length > 0) {\n                this.setMenuChange(true);\n                this.preLoad = false;\n                if (this.disableAutoFiltering === false) {\n                    const rawFilteredOptions = (0,_helpers_56631aa0_js__WEBPACK_IMPORTED_MODULE_1__.C)(this.options, false, this.value, \"anywhere\", this.labelField);\n                    this.filteredOptions =\n                        rawFilteredOptions.length > 0\n                            ? rawFilteredOptions\n                            : [\n                                {\n                                    [this.labelField]: this.emptyOptionListText,\n                                    [this.valueField]: \"\",\n                                },\n                            ];\n                }\n            }\n            if (!this.showClearButton)\n                this.showClearButton = true;\n            this.debounceAriaLiveUpdate();\n        };\n        this.onInputBlur = ({ target, relatedTarget }) => {\n            this.icSearchBarBlur.emit({\n                value: target.value,\n                relatedTarget,\n            });\n        };\n        this.onInputFocus = ({ target }) => {\n            this.icSearchBarFocus.emit({ value: target.value });\n            this.showClearButton = true;\n        };\n        this.handleClearBlur = ({ relatedTarget }) => {\n            this.icClearBlur.emit({ relatedTarget });\n            this.clearButtonFocused = false;\n        };\n        this.handleSubmitSearchBlur = ({ relatedTarget }) => {\n            this.icSubmitSearchBlur.emit({ relatedTarget });\n            this.searchSubmitFocused = false;\n        };\n        this.setInputValue = (newValue) => {\n            if (this.inputEl) {\n                const label = (0,_helpers_56631aa0_js__WEBPACK_IMPORTED_MODULE_1__.E)(newValue, this.options, this.valueField, this.labelField);\n                if (label)\n                    this.inputEl.value = label;\n                else if (this.inputEl.value !== newValue) {\n                    this.inputEl.value = newValue;\n                }\n            }\n        };\n        this.handleMouseDown = (ev) => {\n            ev.preventDefault();\n        };\n        this.handleSubmitSearchFocus = () => {\n            this.searchSubmitFocused = true;\n        };\n        this.handleSubmitSearch = () => {\n            if (this.highlightedValue)\n                this.value = this.highlightedValue;\n            this.highlightedValue = undefined;\n            this.icSubmitSearch.emit({ value: this.value });\n            const form = this.el.closest(\"FORM\");\n            if (this.searchSubmitButton && !!form && !this.preventSubmit) {\n                (0,_helpers_56631aa0_js__WEBPACK_IMPORTED_MODULE_1__.F)(form, this.searchSubmitButton);\n            }\n        };\n        this.handleSubmitSearchKeyDown = (ev) => {\n            if (ev.key === \" \") {\n                ev.preventDefault();\n                this.handleSubmitSearch();\n            }\n        };\n        this.handleRetry = (ev) => {\n            this.retryViaKeyPress = ev.detail.keyPressed === \"Enter\";\n            this.icRetryLoad.emit({ value: ev.detail.value });\n            this.triggerLoading();\n            this.retryButtonClick = true;\n        };\n        this.triggerLoading = () => {\n            const loadingOption = [\n                {\n                    [this.labelField]: this.loadingLabel,\n                    [this.valueField]: \"\",\n                    loading: true,\n                },\n            ];\n            if (this.filteredOptions !== loadingOption)\n                this.filteredOptions = loadingOption;\n            if (this.timeout) {\n                this.timeoutTimer = window.setTimeout(() => {\n                    this.filteredOptions = [\n                        {\n                            [this.labelField]: this.loadingErrorLabel,\n                            [this.valueField]: \"\",\n                            timedOut: true,\n                        },\n                    ];\n                }, this.timeout);\n            }\n        };\n        this.handleOptionSelect = (ev) => {\n            if (ev.detail.label === this.emptyOptionListText) {\n                this.el.setFocus();\n                return;\n            }\n            this.value = ev.detail.value;\n            this.icOptionSelect.emit({ value: this.value });\n        };\n        this.handleMenuOptionHighlight = (ev) => {\n            const { optionId } = ev.detail;\n            if (optionId)\n                this.highlightedValue = optionId.replace(`${this.menuId}-`, \"\");\n            this.ariaActiveDescendant = optionId || \"\";\n        };\n        this.handleMenuChange = (ev) => {\n            this.setMenuChange(ev.detail.open);\n            if (!ev.detail.open) {\n                this.menuCloseFromMenuChangeEvent = true;\n            }\n        };\n        this.setMenuChange = (open) => {\n            if (this.open !== open) {\n                this.open = open;\n                this.icMenuChange.emit({ open });\n            }\n        };\n        this.handleHostFocus = () => {\n            if (this.options &&\n                (this.value || this.showMenuWithNoInput()) &&\n                !this.menuCloseFromMenuChangeEvent) {\n                this.setMenuChange(true);\n            }\n            this.truncateValue = false;\n            this.showMenuWithNoInput() && this.debounceAriaLiveUpdate();\n            this.icSearchBarFocus.emit();\n        };\n        this.handleHostBlur = ({ relatedTarget }) => {\n            var _a;\n            if (this.open &&\n                this.options &&\n                relatedTarget !== this.menu &&\n                !this.retryViaKeyPress &&\n                !this.retryButtonClick) {\n                this.setMenuChange(false);\n            }\n            if (this.retryButtonClick || this.retryViaKeyPress) {\n                (_a = this.inputEl) === null || _a === void 0 ? void 0 : _a.focus();\n            }\n            this.showClearButton = false;\n            this.menuCloseFromMenuChangeEvent = false;\n            this.truncateValue = true;\n            this.icSearchBarBlur.emit({\n                relatedTarget,\n                value: this.value,\n            });\n            this.retryViaKeyPress = false;\n            this.retryButtonClick = false;\n            this.showMenuWithNoInput() && this.updateSearchResultAriaLive();\n        };\n        this.handleFocusClearButton = () => {\n            this.clearButtonFocused = true;\n        };\n        this.renderAssistiveHintEl = () => {\n            var _a, _b;\n            const input = (_a = this.el.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(`#${this.inputId}`);\n            if (input &&\n                Object.keys(input).length > 0 &&\n                this.hasOptionsOrFilterDisabled()) {\n                this.assistiveHintEl = document.createElement(\"span\");\n                this.assistiveHintEl.innerText = this.assistiveHintText;\n                this.assistiveHintEl.id = `${this.inputId}-assistive-hint`;\n                this.assistiveHintEl.style.display = \"none\";\n                (_b = input.after) === null || _b === void 0 ? void 0 : _b.call(input, this.assistiveHintEl);\n            }\n        };\n        this.updateSearchResultAriaLive = () => {\n            var _a;\n            const searchResultsStatusEl = (_a = this.el.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(\".search-results-status\");\n            if (searchResultsStatusEl) {\n                if (!this.open ||\n                    (this.value === \"\" && !this.showMenuWithNoInput()) ||\n                    this.value.length < this.charactersUntilSuggestion) {\n                    searchResultsStatusEl.innerText = \"\";\n                }\n                else if (this.hasOptionsOrFilterDisabled() &&\n                    this.filteredOptions.length > 0 &&\n                    this.open &&\n                    !this.filteredOptions[0].loading) {\n                    searchResultsStatusEl.innerText = this.hadNoOptions()\n                        ? this.emptyOptionListText\n                        : `${this.filteredOptions.length} result${this.filteredOptions.length > 1 ? \"s\" : \"\"} available`;\n                }\n            }\n        };\n        this.hasOptionsOrFilterDisabled = () => this.options.length > 0 || this.disableAutoFiltering;\n        this.hadNoOptions = () => this.filteredOptions.length === 1 &&\n            this.filteredOptions[0][this.labelField] === this.emptyOptionListText &&\n            this.searchMode === \"navigation\";\n        this.isSubmitDisabled = () => !this.value ||\n            this.value.length < this.charactersUntilSuggestion ||\n            this.disabled ||\n            this.hadNoOptions() ||\n            this.hasTimedOut ||\n            this.loading;\n        this.showMenuWithNoInput = () => this.charactersUntilSuggestion === 0;\n        this.updateSearchButtonType = () => {\n            this.searchButtonType =\n                !!this.el.closest(\"FORM\") &&\n                    !this.preventFormSubmitOnSearch\n                    ? \"submit\"\n                    : \"button\";\n        };\n    }\n    watchCharactersUntilSuggestionHandler() {\n        if (this.showMenuWithNoInput()) {\n            this.filteredOptions = this.options;\n        }\n    }\n    watchDisabledHandler() {\n        (0,_helpers_56631aa0_js__WEBPACK_IMPORTED_MODULE_1__.r)(this.disabled, this.el);\n    }\n    debounceChanged() {\n        this.icChange = (0,_helpers_56631aa0_js__WEBPACK_IMPORTED_MODULE_1__.G)(this.icChange, this.debounce);\n    }\n    loadingHandler(newValue) {\n        if (newValue && !this.hasTimedOut) {\n            this.preLoad = false;\n            this.triggerLoading();\n        }\n    }\n    preventFormSubmitOnSearchHandler() {\n        this.updateSearchButtonType();\n    }\n    filteredOptionsHandler(newOptions) {\n        this.hasTimedOut = newOptions.some((opt) => opt.timedOut);\n    }\n    watchOptionsHandler(newOptions) {\n        if (this.disableAutoFiltering) {\n            if (!this.hasTimedOut) {\n                this.loading = false;\n                clearTimeout(this.timeoutTimer);\n                if (newOptions.length > 0) {\n                    this.filteredOptions = newOptions;\n                }\n                else {\n                    if (this.hadNoOptions()) {\n                        return;\n                    }\n                    this.setMenuChange(true);\n                    if (!this.preLoad) {\n                        this.filteredOptions = [\n                            {\n                                [this.labelField]: this.emptyOptionListText,\n                                [this.valueField]: \"\",\n                            },\n                        ];\n                    }\n                    this.preLoad = true;\n                }\n            }\n        }\n        else if (this.showMenuWithNoInput()) {\n            this.filteredOptions = newOptions;\n        }\n        this.debounceAriaLiveUpdate();\n    }\n    watchValueHandler(newValue) {\n        this.setInputValue(newValue);\n        this.icChange.emit({ value: newValue });\n    }\n    connectedCallback() {\n        this.debounceChanged();\n    }\n    disconnectedCallback() {\n        var _a;\n        (_a = this.assistiveHintEl) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n    componentWillLoad() {\n        this.setInputValue(this.value);\n        (0,_helpers_56631aa0_js__WEBPACK_IMPORTED_MODULE_1__.r)(this.disabled, this.el);\n        this.updateSearchButtonType();\n    }\n    componentDidLoad() {\n        if (this.focusOnLoad) {\n            this.el.setFocus();\n        }\n        if (this.hasOptionsOrFilterDisabled()) {\n            this.renderAssistiveHintEl();\n            if (this.disableAutoFiltering || this.showMenuWithNoInput()) {\n                this.filteredOptions = this.options;\n            }\n        }\n        (0,_helpers_56631aa0_js__WEBPACK_IMPORTED_MODULE_1__.o)([{ prop: this.label, propName: \"label\" }], \"Search Bar\");\n    }\n    componentWillRender() {\n        if (this.prevNoOption && this.menu && !this.hasTimedOut) {\n            this.menu.handleSetFirstOption();\n            this.prevNoOption = false;\n        }\n        if (this.filteredOptions.find((filteredOption) => filteredOption[this.labelField] === this.emptyOptionListText ||\n            filteredOption[this.labelField] === this.loadingErrorLabel ||\n            filteredOption[this.labelField] === this.loadingLabel)) {\n            this.prevNoOption = true;\n        }\n    }\n    handleKeyDown(event) {\n        this.icKeydown.emit({ event });\n        if (this.menu && this.open) {\n            this.menu.handleKeyboardOpen(event);\n        }\n    }\n    handleKeyUp(ev) {\n        if (ev.key === \"Enter\") {\n            if (this.preventSubmit || this.isSubmitDisabled()) {\n                return;\n            }\n            this.handleSubmitSearch();\n            this.setMenuChange(false);\n        }\n        if (ev.key === \"Escape\") {\n            this.setMenuChange(false);\n        }\n        if (this.preventSubmit) {\n            this.preventSubmit = false;\n        }\n    }\n    /**\n     * Sets focus on the native `input`.\n     */\n    async setFocus() {\n        var _a;\n        this.retryViaKeyPress = false;\n        this.retryButtonClick = false;\n        (_a = this.inputEl) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    debounceAriaLiveUpdate() {\n        clearTimeout(this.debounceAriaLive);\n        this.debounceAriaLive = window.setTimeout(() => {\n            this.updateSearchResultAriaLive();\n        }, 500);\n    }\n    render() {\n        const { inputId, name, label, required, size, placeholder, helperText, disabled, value, readonly, spellcheck, fullWidth, options, open, hideLabel, menuId, ariaActiveDescendant, truncateValue, autofocus, autocapitalize, autocomplete, filteredOptions, theme, charactersUntilSuggestion, labelField, valueField, loadingLabel, loadingErrorLabel, searchMode, showClearButton, searchSubmitFocused, clearButtonFocused, searchButtonType, } = this;\n        const disabledMode = readonly || disabled;\n        const describedBy = (0,_helpers_56631aa0_js__WEBPACK_IMPORTED_MODULE_1__.q)(this.el, inputId, helperText !== \"\", false).trim();\n        let describedById = undefined;\n        if (describedBy !== \"\" && this.hasOptionsOrFilterDisabled()) {\n            describedById = `${describedBy} ${inputId}-assistive-hint`;\n        }\n        else if (this.hasOptionsOrFilterDisabled()) {\n            describedById = `${inputId}-assistive-hint`;\n        }\n        else if (describedBy !== \"\") {\n            describedById = describedBy;\n        }\n        const hasSuggestedSearch = (!!value || this.showMenuWithNoInput()) &&\n            this.hasOptionsOrFilterDisabled();\n        const menuOpen = hasSuggestedSearch && open && filteredOptions.length > 0;\n        const menuRendered = menuOpen && value.length >= charactersUntilSuggestion;\n        const labelValue = (0,_helpers_56631aa0_js__WEBPACK_IMPORTED_MODULE_1__.E)(value, options, valueField, labelField);\n        (0,_helpers_56631aa0_js__WEBPACK_IMPORTED_MODULE_1__.m)(this.el, value, name, disabledMode);\n        return ((0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.H, { key: '0446a1092d484ef29e0424eb22c6ae00b8fe8a72', class: {\n                \"ic-search-bar-search\": true,\n                \"ic-search-bar-full-width\": fullWidth,\n                \"ic-search-bar-disabled\": disabled,\n                \"ic-search-bar-small\": size === \"small\",\n                [`ic-theme-${theme}`]: theme !== \"inherit\",\n            }, onFocus: this.handleHostFocus, onBlur: this.handleHostBlur }, (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"ic-input-container\", { key: 'fc32e70f7fa9397bc355774f58b8ab62af231083', readonly: readonly, disabled: disabledMode }, !hideLabel && ((0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"ic-input-label\", { key: '32b8c40811415afc37480ed00416fde752704235', for: inputId, label: label, helperText: helperText, required: required, disabled: disabledMode && !readonly, readonly: readonly }, (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"slot\", { key: 'be47eb0acd1cde1b3d4f80ae5e4300021fe069d6', name: \"helper-text\", slot: \"helper-text\" }))), (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"ic-input-component-container\", { key: '266d999ac46d480655e325db420850e495c3cae7', ref: (el) => (this.anchorEl = el), size: size, disabled: disabledMode, readonly: readonly, fullWidth: fullWidth }, (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"input\", { key: 'f9f3b64cd1bf88eeb7a7cd52d9d41240c7afa14f', id: inputId, name: name, ref: (el) => (this.inputEl = el), value: options && !!labelValue ? labelValue : value, class: {\n                \"no-left-pad\": readonly,\n                readonly,\n                \"truncate-value\": truncateValue,\n            }, placeholder: placeholder, required: required, disabled: disabledMode, readonly: readonly, onInput: this.onInput, onBlur: this.onInputBlur, onFocus: this.onInputFocus, \"aria-label\": hideLabel ? label : undefined, \"aria-activedescendant\": ariaActiveDescendant, \"aria-expanded\": options.length > 0 && menuRendered ? `${menuOpen}` : undefined, \"aria-owns\": menuRendered ? menuId : undefined, \"aria-describedby\": describedById, \"aria-controls\": menuRendered ? menuId : undefined, \"aria-haspopup\": options.length > 0 ? \"listbox\" : undefined, \"aria-autocomplete\": hasSuggestedSearch ? \"list\" : undefined, role: options.length > 0 && menuRendered ? \"combobox\" : undefined, autocomplete: autocomplete, autocapitalize: autocapitalize, autoFocus: autofocus, spellcheck: spellcheck, inputmode: \"search\" }), (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { key: 'cd71148d381416ce2aac9a4c6899bbbe5077ebb9', class: {\n                \"clear-button-container\": true,\n                \"clear-button-visible\": !!value && !disabledMode && showClearButton,\n            } }, (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"ic-button\", { key: '3cf8c824075d6df594b65f7885f664ffce21fca8', id: \"clear-button\", class: {\n                \"clear-button\": true,\n                \"clear-button-unfocused\": !clearButtonFocused,\n            }, \"aria-label\": \"Clear\", innerHTML: clearIcon, onClick: this.handleClear, onMouseDown: this.handleMouseDown, size: size, onFocus: this.handleFocusClearButton, onBlur: this.handleClearBlur, onKeyDown: this.handleClear, type: \"button\", variant: \"icon\", theme: clearButtonFocused ? \"light\" : \"dark\" }), (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { key: 'a8dd7dad12686d0d6dac4bde194d0df7eaf04c00', class: \"divider\" })), (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { key: '0d3eb9dff9d6ebbdf4063826077c410256772aed', class: {\n                \"search-submit-button-container\": true,\n                \"search-submit-button-disabled\": this.isSubmitDisabled(),\n            } }, (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"ic-button\", { key: '7d6a4c3a6f2a63178db90324e6f66804bd74ae07', id: \"search-submit-button\", \"aria-label\": \"Search\", ref: (el) => (this.searchSubmitButton = el), class: {\n                \"search-submit-button\": true,\n                \"search-submit-button-small\": size === \"small\",\n                \"search-submit-button-unfocused\": !searchSubmitFocused,\n                \"search-submit-button-disabled\": this.isSubmitDisabled(),\n            }, disabled: this.isSubmitDisabled(), innerHTML: searchIcon, size: size, onClick: this.handleSubmitSearch, onMouseDown: this.handleMouseDown, onBlur: this.handleSubmitSearchBlur, onFocus: this.handleSubmitSearchFocus, onKeyDown: this.handleSubmitSearchKeyDown, type: searchButtonType, variant: \"icon\", theme: searchSubmitFocused ? \"light\" : \"dark\" }))), (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { key: '7dbb3fd0f8374fffc17c3405e905d7307462a4c9', class: {\n                \"menu-container\": true,\n                fullwidth: fullWidth,\n            } }, menuRendered && this.anchorEl && this.inputEl && ((0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"ic-menu\", { key: '9af74de47a4042857e8bed7691ce97397bc19f06', class: {\n                \"no-results\": this.hadNoOptions() ||\n                    (filteredOptions.length === 1 &&\n                        (filteredOptions[0][labelField] === loadingLabel ||\n                            filteredOptions[0][labelField] === loadingErrorLabel)),\n            }, activationType: \"manual\", anchorEl: this.anchorEl, autofocusOnSelected: false, searchMode: searchMode, inputEl: this.inputEl, inputLabel: label, ref: (el) => (this.menu = el), fullWidth: fullWidth, menuId: menuId, open: true, options: filteredOptions, onMenuOptionSelect: this.handleOptionSelect, onMenuStateChange: this.handleMenuChange, onMenuOptionId: this.handleMenuOptionHighlight, onRetryButtonClicked: this.handleRetry, parentEl: this.el, value: value, labelField: labelField, valueField: valueField, searchBar: true })))), (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { key: 'cf5b06c06543f839da43f37b3b105a16f2ca37f4', \"aria-live\": \"polite\", role: \"status\", class: \"search-results-status\" })));\n    }\n    static get delegatesFocus() { return true; }\n    get el() { return (0,_index_a7a720e7_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }\n    static get watchers() { return {\n        \"charactersUntilSuggestion\": [\"watchCharactersUntilSuggestionHandler\"],\n        \"disabled\": [\"watchDisabledHandler\"],\n        \"debounce\": [\"debounceChanged\"],\n        \"loading\": [\"loadingHandler\"],\n        \"preventFormSubmitOnSearch\": [\"preventFormSubmitOnSearchHandler\"],\n        \"filteredOptions\": [\"filteredOptionsHandler\"],\n        \"options\": [\"watchOptionsHandler\"],\n        \"value\": [\"watchValueHandler\"]\n    }; }\n};\nSearchBar.style = IcSearchBarStyle0;\n\n\n\n//# sourceMappingURL=ic-search-bar.entry.js.map\n\n//# sourceURL=webpack:///../../../../../../../../node_modules/@ukic/web-components/dist/esm/ic-search-bar.entry.js?\n}");

/***/ })

}]);